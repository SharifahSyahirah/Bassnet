#--==============================================================================
#-- DBMS Name        :    SNOWFLAKE Custom*
#-- Block Name       :    UPDATE_STAGE_BASSxBNM_xCriticalSpare
#-- Template         :    wsl_snowflake_pscript_stage
#-- Template Version :    8.5.1.0
#-- Description      :    Update the Stage Table table STAGE_BASSxBNM_xCriticalSpare
#-- Generated by     :    WhereScape RED Version 8.6.1.2 (build 210415-011050)
#-- Generated for    :    Wilhelmsen Ships Service Malaysia
#-- Generated on     :    Friday, June 20, 2025 at 12:37:31
#-- Author           :    Sharifah
#--==============================================================================
#-- Notes / History
#--

Import-module -Name WslPowershellCommon -DisableNameChecking
Import-module -Name WslPowershellSnowflake -DisableNameChecking
$tgtConn = New-Object System.Data.Odbc.OdbcConnection
Hide-Window

#--============================================================================
#-- General Variables
#--============================================================================

$sequence = ${env:WSL_SEQUENCE}
$jobName = ${env:WSL_JOB_NAME}
$taskName = ${env:WSL_TASK_NAME}
$jobId = ${env:WSL_JOB_KEY}
$taskId = ${env:WSL_TASK_KEY}
$return_Msg = "STAGE_BASSxBNM_xCriticalSpare updated."
$status = 1

#--============================================================================
#-- Main
#--============================================================================

$step = 100
[int64]$insertCount = 0



if ( $status -eq 1 ){

  #--============================================================================
  #-- Truncate existing records
  #--============================================================================

  $step = 200

  $sql = @"
  TRUNCATE TABLE [TABLEOWNER].[STAGE_BASSxBNM_xCriticalSpare]
  ;
"@
  $SnowflakeResult = Run-Snowflake-RedSQL -sql $sql -dsn ${env:WSL_TGT_DSN} -uid ${env:WSL_TGT_USER} -pwd ${env:WSL_TGT_PWD} -failureMsg "Failed truncating table STAGE_BASSxBNM_xCriticalSpare step $step" -odbcConn $tgtConn
  $return_Msg = $SnowflakeResult[2]
}


if ( $status -eq 1 ){
  #--============================================================================
  #-- Insert new records
  #--============================================================================

  $step = 300

  $sql = @"
  INSERT INTO [TABLEOWNER].[STAGE_BASSxBNM_xCriticalSpare]
  ( mtrl_item_id
  , distgrp_id
  , category_id
  , mtrl_code
  , mtrl_description
  , vslmtrl_criticality
  , mtrl_criticality_code
  , description
  , db_id
  , dim_Vessel_key
  , mtrlstk_stock
  , Vessel_ID
  , Vessel_Name
  , Linked_Component
  , DSS_CREATE_TIME
  , DSS_UPDATE_TIME
  )
  SELECT stage_BASSxBNM_xCriticalSpare_10.mtrl_item_id AS mtrl_item_id
       , stage_BASSxBNM_xCriticalSpare_10.distgrp_id AS distgrp_id
       , stage_BASSxBNM_xCriticalSpare_10.category_id AS category_id
       , stage_BASSxBNM_xCriticalSpare_10.mtrl_code AS mtrl_code
       , stage_BASSxBNM_xCriticalSpare_10.mtrl_description AS mtrl_description
       , stage_BASSxBNM_xCriticalSpare_10.vslmtrl_criticality AS vslmtrl_criticality
       , stage_BASSxBNM_xCriticalSpare_10.mtrl_criticality_code AS mtrl_criticality_code
       , stage_BASSxBNM_xCriticalSpare_10.description AS description
       , stage_BASSxBNM_xCriticalSpare_10.db_id AS db_id
       , COALESCE(dim_Vessel.dim_Vessel_key, 0) AS dim_Vessel_key
       , stage_BASSxBNM_xCriticalSpare_10.mtrlstk_stock AS mtrlstk_stock
       , stage_BASSxBNM_xCriticalSpare_10.Vessel_ID AS Vessel_ID
       , stage_BASSxBNM_xCriticalSpare_10.Vessel_Name AS Vessel_Name
       , stage_BASSxBNM_xCriticalSpare_10.Linked_Component AS Linked_Component
       , CAST(CURRENT_TIMESTAMP AS TIMESTAMP) AS DSS_CREATE_TIME
       , CAST(CURRENT_TIMESTAMP AS TIMESTAMP) AS DSS_UPDATE_TIME
  FROM [TABLEOWNER].[stage_BASSxBNM_xCriticalSpare_10] stage_BASSxBNM_xCriticalSpare_10
  LEFT JOIN [TABLEOWNER].[dim_Vessel] dim_Vessel
    ON TRIM(UPPER(stage_BASSxBNM_xCriticalSpare_10.db_id)) = TRIM(UPPER(dim_Vessel.VesselCode))
  ;
"@
  $SnowflakeResult = Run-Snowflake-RedSQL -sql $sql -dsn ${env:WSL_TGT_DSN} -uid ${env:WSL_TGT_USER} -pwd ${env:WSL_TGT_PWD} -failureMsg "Failed insert into table STAGE_BASSxBNM_xCriticalSpare step $step" -odbcConn $tgtConn
  $insertCount = $insertCount + $SnowflakeResult[1]
  $return_Msg = $SnowflakeResult[2]
}



#--=====================================================
#-- All Done report the results
#--=====================================================

$step = 400

#-- WsWrkTask call to updated row counts in Ws_Wrk_Task_Run/Log
$metaResult = WsWrkTask -Replaced $insertCount
if ( $metaResult -lt -1 ){
  $status = -2
  $return_Msg = "Failure executing WsWrkTask. $insertCount records inserted."
}

#-- Work out return message
if ( $status -eq 1 ) {

  $return_Msg = "STAGE_BASSxBNM_xCriticalSpare updated.  "
  $return_Msg += "$insertCount records inserted.  "
}

$status
$return_Msg

$tgtConn.Dispose()
